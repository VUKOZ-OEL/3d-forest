INSTALL file for 3D Forest, Copyright 2020 VUKOZ
================================================

This document describes how to build, edit and debug 3D Forest.


Build Prerequisites
===================

The code uses C++17 and CMake.
Qt5 or Qt6 and OpenGL are required for GUI desktop application.

Downloading and installation of other 3rd party libraries is not required.
3rd party libraries are included in "3rdparty" directory.


CMake options
=============
-DBUILD_EXAMPLES=ON    - Build all examples.


Build Using "Unix Makefiles" on Linux in 20 minutes
===================================================
1.  Updating APT Packages
    $ sudo apt update
    $ sudo apt upgrade

2.  Installing Virtual Machine Tools [Optional]
    $ sudo apt install open-vm-tools-desktop

3.  Installing Additional Tools: gcc, g++, make, libc6-dev, etc.
    $ sudo apt install build-essential

4.  Installing Additional Tools: OpenGL and CMake from a terminal
    $ sudo apt install mesa-common-dev libglu1-mesa-dev
    $ sudo apt install cmake
    $ sudo apt install git

5.  Installing Required Libraries for Qt Installer [May not be necessary]
    $ sudo apt install libxcb-cursor0 libxcb-cursor-dev

6.  Install Qt
    - Download Qt installer from https://www.qt.io/download
        - Click "Downloads for open source users" button in "Go open source"
        - Click "Download the Qt Online Installer" button in bottom section
          of the page "Looking for Qt binaries"
        - Recommended download was "Qt Online Installer for Linux (64-bit)"
        - "Download" button saved file "qt-unified-linux-x64-4.6.0-online.run"
    - Run the installer
        - Check "make file executable" in file properties of downloaded file
        - Open "qt-unified-linux-x64-4.6.0-online.run", shows "Qt Setup" window
        - Enter Qt Account Email and Password, "Next"
        - Check "I have read" and "I am an individual person", "Next", "Next"
        - "/home/user/Qt" is directory where Qt will be installed, default
        - Select "Custom installation", "Next"
        - The current installer allows to install versions 6.5.3 to 6.8.0
            - Additionally checked: Qt - Qt 6.5.3 - Desktop gcc 64-bit
            - Additionally checked: Qt - Qt 6.5.3 - Sources
        - To install older version like 5.15.0
            - Check "Archive" checkbox and click "Filter" button
            - Click "Deselect All" button if you do not need Qt Design Studio etc.
            - Check Qt - Qt 5.15.0 - Desktop gcc 64-bit
            - Check Qt - Qt 5.15.0 - Sources
        - Click "Next", license checkbox and "Next", click "Install"
        - Qt 5.15 installation used 3.65 GB of disk space and took about 10 minutes

7.  Get 3D Forest source code
    $ cd /home/user/
    $ git clone https://github.com/VUKOZ-OEL/3d-forest.git

8.  Build 3D Forest
    $ cd /home/user/3d-forest
    $ mkdir build
    $ cd /home/user/3d-forest/build
    $ PATH=$PATH:/home/user/Qt/5.15.0/gcc_64/bin
    $ cmake -G "Unix Makefiles" .. -DCMAKE_INSTALL_PREFIX=.. -DCMAKE_INSTALL_RPATH="/home/user/3d-forest/bin;/home/user/Qt/5.15.0/gcc_64/lib" -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=TRUE
    $ make
    $ make install

9.  Start 3D Forest application
    $ cd /home/user/3d-forest/bin
    $ ./3DForest


Build Using "MinGW Makefiles" on Windows
========================================

1.  Installation of msys2 and mingw-w64
    - Open https://www.msys2.org/ and follow Installation instructions
    - Default installation will create "C:\msys64"

2.  Setup Windows PATH variable
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\msys64\usr\bin", hit enter
    - Click "New" and add "C:\msys64\usr\local\bin", hit enter
    - Click "New" and add "C:\msys64\mingw64\bin", hit enter
    - "Move Up" these three new items to top

3.  Run "MSYS2 MSYS" Windows application and install additional packages
    - Required
        $ pacman -S mingw-w64-x86_64-clang
        $ pacman -S mingw-w64-x86_64-cmake
        $ pacman -S mingw-w64-x86_64-make
    - Optional
        $ pacman -S mingw-w64-x86_64-python
        $ pacman -S mingw-w64-x86_64-python-pip
        $ pacman -S mingw-w64-x86_64-doxygen
        $ pacman -S mingw-w64-x86_64-graphviz

4.  Install Qt
    - Download Qt installer
    - Run the installer
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\Qt\5.15.0\mingw81_64\bin", hit enter

5.  Open "cmd" terminal, navigate to the project folder and build it
    - Build
        > mkdir build
        > cd build
        > cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX=..
        > mingw32-make
        > mingw32-make install
    - Run
        executables can be found in directory bin
    - Extra command: Generate API documentation
        > mingw32-make doc
    - Extra command: Reformat all source files
        > mingw32-make format

6.  Optional: create batch file "build\build.bat" with the following content:
    - cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX=.. -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DBUILD_DEVEL=ON
    - mingw32-make format
    - mingw32-make
    - mingw32-make install
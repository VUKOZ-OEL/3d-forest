INSTALL file for 3D Forest, Copyright 2020 VUKOZ
================================================

This document describes how to build, edit and debug 3D Forest.


Build Prerequisites
===================

The code uses C++17 and CMake.
Qt5 or Qt6 and OpenGL are required for GUI desktop application.

Downloading and installation of other 3rd party libraries is not required.
3rd party libraries are included in "3rdparty" directory.


CMake options
=============
-DBUILD_EXAMPLES=ON    - Build all examples.


Build Using "Unix Makefiles" on Linux in 20 minutes
===================================================
1.  Updating APT Packages
    $ sudo apt update
    $ sudo apt upgrade

2.  Installing Virtual Machine Tools [Optional]
    $ sudo apt install open-vm-tools-desktop

3.  Installing Additional Tools: C/C++ development
    $ sudo apt install build-essential

4.  Installing Additional Tools: GUI development with OpenGL 3D graphics library
    $ sudo apt install mesa-common-dev libgl1-mesa-dev
    $ sudo apt install libxkbcommon-dev libxkbfile-dev

5.  Installing Additional Tools: CMake and GIT
    $ sudo apt install cmake
    $ sudo apt install git

6.  Installing Required Libraries for Qt Installer [May not be necessary]
    $ sudo apt install libxcb-cursor0 libxcb-cursor-dev
    $ sudo apt-get install libxcb-xinerama0

7.  Install Qt
    - Download Qt installer from https://www.qt.io/download
        - Click the "Downloads for open source users" button under "Go open source"
        - Click the "Download the Qt Online Installer" button in the bottom section
          of the "Looking for Qt binaries" page
        - The recommended download is usually "Qt Online Installer for Linux (64-bit)"
        - The "Download" button saved the file as "qt-unified-linux-x64-4.6.0-online.run"
    - Run the installer
        - You may need to check the "Make file executable" option in the file properties of the downloaded file
        - Opening qt-unified-linux-x64-4.6.0-online.run will display the "Qt Setup" window
        - Enter your Qt Account email and password, then click "Next"
        - Check the boxes for "I have read" and "I am an individual person," then click 'Next'
        - Click "Next"
        - "/home/user/Qt" is the default directory where Qt will be installed
        - Select "Custom installation", then click "Next"
        - The current installer allows you to install Qt versions from 6.5.3 to 6.8.0.
          Older versions like Qt 5.15.0 are available by selecting the "Archive" checkbox.
            - Click "Deselect All" button if you do not need Qt Design Studio etc.
            - Check: Qt - Qt 6.8.0 - Desktop
            - Check: Qt - Qt 6.8.0 - Sources
            - Click "Next"
        - Check license checkbox and click "Next"
        - Click "Install" button
        - Qt 6.8.0 installation used 2.77 GB of disk space and took about 8 minutes

8.  Download the 3D Forest source code
    $ cd /home/user/
    $ git clone https://github.com/VUKOZ-OEL/3d-forest.git

9.  Build the 3D Forest project
    $ cd /home/user/3d-forest
    $ mkdir build
    $ cd /home/user/3d-forest/build
    $ PATH=$PATH:/home/user/Qt/6.8.0/gcc_64/bin
    $ cmake -G "Unix Makefiles" .. -DCMAKE_INSTALL_PREFIX=.. -DOpenGL_GL_PREFERENCE=GLVND -DCMAKE_INSTALL_RPATH="/home/user/3d-forest/bin;/home/user/Qt/6.8.0/gcc_64/lib" -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=TRUE
    $ make
    $ make install

10. Start the 3D Forest application
    $ cd /home/user/3d-forest/bin
    $ ./3DForest


Build Using "MinGW Makefiles" on Windows
========================================

1.  Installation of msys2 and mingw-w64
    - Open https://www.msys2.org/ and follow Installation instructions
    - Default installation will create "C:\msys64"

2.  Setup Windows PATH variable
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\msys64\usr\bin", hit enter
    - Click "New" and add "C:\msys64\usr\local\bin", hit enter
    - Click "New" and add "C:\msys64\mingw64\bin", hit enter
    - "Move Up" these three new items to top

3.  Run "MSYS2 MSYS" Windows application and install additional packages
    - Required
        $ pacman -S mingw-w64-x86_64-clang
        $ pacman -S mingw-w64-x86_64-cmake
        $ pacman -S mingw-w64-x86_64-make
    - Optional
        $ pacman -S mingw-w64-x86_64-python
        $ pacman -S mingw-w64-x86_64-python-pip
        $ pacman -S mingw-w64-x86_64-doxygen
        $ pacman -S mingw-w64-x86_64-graphviz

4.  Install Qt
    - Download Qt installer
    - Run the installer
    - Run "systempropertiesadvanced" from the search box
    - Click "Environment Variables"
    - In "System variables" select "Path" and click "Edit..."
    - Click "New" and add "C:\Qt\5.15.0\mingw81_64\bin", hit enter

5.  Open "cmd" terminal, navigate to the project folder and build it
    - Build
        > mkdir build
        > cd build
        > cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX=..
        > mingw32-make
        > mingw32-make install
    - Run
        executables can be found in directory bin
    - Extra command: Generate API documentation
        > mingw32-make doc
    - Extra command: Reformat all source files
        > mingw32-make format

6.  Optional: create batch file "build\build.bat" with the following content:
    - cmake -G "MinGW Makefiles" .. -DCMAKE_INSTALL_PREFIX=.. -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DBUILD_DEVEL=ON
    - mingw32-make format
    - mingw32-make
    - mingw32-make install